{"ast":null,"code":"var _jsxFileName = \"/Users/ronmasas/Desktop/coronaforms.org/ui/components/LeumiForm.js\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport strings from \"../strings.json\";\nimport Button from \"../components/Button\";\nimport { useState, Fragment } from \"react\";\nimport { Row, Col } from \"react-grid-system\";\nexport default (props => {\n  const {\n    0: step,\n    1: setStep\n  } = useState(0);\n  const {\n    0: borrowers,\n    1: setBorrowers\n  } = useState([1]);\n\n  function addBorrower() {\n    const newBorrowers = [...borrowers, borrowers[borrowers.length - 1] + 1];\n    setBorrowers([]);\n    setTimeout(() => {\n      setBorrowers(newBorrowers);\n    }, 0);\n  }\n\n  function removeBorrower(id) {\n    let clonedBorrowers = [...borrowers].filter(_id => _id !== id);\n    setBorrowers([]);\n    setTimeout(() => {\n      setBorrowers(clonedBorrowers);\n      setTimeout(() => {\n        props.handleUpdate(`id_number_${id}`, \"\");\n        props.handleUpdate(`first_name_${id}`, \"\");\n      }, 0);\n    }, 0);\n  }\n\n  return __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 12\n    }\n  }, step === 0 && __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 24\n    }\n  }, __jsx(\"h1\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 13\n    }\n  }, \"Who's the mortgage registered to?\"), __jsx(\"h2\", {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 13\n    }\n  }, \"It's important to add all people the mortgage is registered to.\"), borrowers.map(id => __jsx(\"div\", {\n    className: \"relative\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 39\n    }\n  }, __jsx(Row, {\n    className: \"mb-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 21\n    }\n  }, __jsx(Col, {\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    defaultValue: props.data[`first_name_${id}`],\n    onChange: event => props.handleUpdate(`first_name_${id}`, event.target.value),\n    className: \"field not-round\",\n    placeholder: strings.english.Common.FullName,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 29\n    }\n  })), __jsx(Col, {\n    sm: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 25\n    }\n  }, __jsx(\"input\", {\n    defaultValue: props.data[`id_number_${id}`],\n    onChange: event => props.handleUpdate(`id_number_${id}`, event.target.value),\n    className: \"field not-round\",\n    placeholder: strings.english.Common.IDNumber,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 29\n    }\n  }))), id > 1 && __jsx(Button, {\n    onClick: () => removeBorrower(id),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 32\n    }\n  }, \"Remove\"))), __jsx(\"div\", {\n    className: \"text-right mt-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 13\n    }\n  }, __jsx(Button, {\n    onClick: addBorrower,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, \"Add\"))), step === 1 && __jsx(Fragment, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 24\n    }\n  }));\n});","map":{"version":3,"sources":["/Users/ronmasas/Desktop/coronaforms.org/ui/components/LeumiForm.js"],"names":["strings","Button","useState","Fragment","Row","Col","props","step","setStep","borrowers","setBorrowers","addBorrower","newBorrowers","length","setTimeout","removeBorrower","id","clonedBorrowers","filter","_id","handleUpdate","map","data","event","target","value","english","Common","FullName","IDNumber"],"mappings":"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","sourcesContent":["import strings from \"../strings.json\";\nimport Button from \"../components/Button\";\nimport { useState, Fragment } from \"react\";\nimport { Row, Col } from \"react-grid-system\";\n\nexport default (props) => {\n    const [step, setStep] = useState(0);\n    const [borrowers, setBorrowers] = useState([1]);\n\n    function addBorrower() {\n        const newBorrowers = [...borrowers, borrowers[borrowers.length - 1] + 1];\n        setBorrowers([]);\n        setTimeout(() => {\n            setBorrowers(newBorrowers);\n        }, 0);\n    }\n\n    function removeBorrower(id) {\n        let clonedBorrowers = [...borrowers].filter(_id => _id !== id);\n        setBorrowers([]);\n        setTimeout(() => {\n            setBorrowers(clonedBorrowers);\n            setTimeout(() => {\n                props.handleUpdate(`id_number_${id}`, \"\");\n                props.handleUpdate(`first_name_${id}`, \"\");\n            }, 0)\n        }, 0);\n    }\n\n    return <Fragment>\n        {step === 0 && <Fragment>\n            <h1 className=\"mb-2\">Who's the mortgage registered to?</h1>\n            <h2 className=\"mb-2\">It's important to add all people the mortgage is registered to.</h2>\n            {\n                borrowers.map((id) => <div className=\"relative\">\n                    <Row className=\"mb-2\">\n                        <Col sm={6}>\n                            <input defaultValue={props.data[`first_name_${id}`]} onChange={event => props.handleUpdate(`first_name_${id}`, event.target.value)} className=\"field not-round\" placeholder={strings.english.Common.FullName} />\n                        </Col>\n                        <Col sm={6}>\n                            <input defaultValue={props.data[`id_number_${id}`]} onChange={event => props.handleUpdate(`id_number_${id}`, event.target.value)} className=\"field not-round\" placeholder={strings.english.Common.IDNumber} />\n                        </Col>\n                    </Row>\n                    {id > 1 && <Button onClick={() => removeBorrower(id)}>Remove</Button>}\n                </div>)\n            }\n            <div className=\"text-right mt-2\">\n                <Button onClick={addBorrower}>Add</Button>\n            </div>\n        </Fragment>}\n        {step === 1 && <Fragment>\n\n        </Fragment>}\n    </Fragment>\n}"]},"metadata":{},"sourceType":"module"}