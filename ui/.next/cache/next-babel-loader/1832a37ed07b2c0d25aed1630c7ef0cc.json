{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport strings from \"../strings.json\";\nimport Input from \"../components/Input\";\nimport Button from \"../components/Button\";\nimport { useState, Fragment, useRef } from \"react\";\nimport SignaturePad from \"../components/SignaturePad\";\nimport NewsletterForm from \"../components/NewsletterForm\";\nexport default (function (props) {\n  var formEl = useRef(null);\n\n  var _useState = useState(0),\n      step = _useState[0],\n      setStep = _useState[1];\n\n  var _useState2 = useState(false),\n      download = _useState2[0],\n      setDownload = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      fullName1 = _useState3[0],\n      setFullName1 = _useState3[1];\n\n  var _useState4 = useState(\"\"),\n      fullName2 = _useState4[0],\n      setFullName2 = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      fullName3 = _useState5[0],\n      setFullName3 = _useState5[1];\n\n  var _useState6 = useState(\"\"),\n      IDNumber1 = _useState6[0],\n      setIDNumber1 = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      IDNumber2 = _useState7[0],\n      setIDNumber2 = _useState7[1];\n\n  var _useState8 = useState(\"\"),\n      IDNumber3 = _useState8[0],\n      setIDNumber3 = _useState8[1];\n\n  var _useState9 = useState(false),\n      accountVisible1 = _useState9[0],\n      setAccountVisible1 = _useState9[1];\n\n  var _useState10 = useState(false),\n      accountVisible2 = _useState10[0],\n      setAccountVisible2 = _useState10[1];\n\n  var _useState11 = useState(\"\"),\n      signature = _useState11[0],\n      setSignature = _useState11[1];\n\n  var _useState12 = useState(\"\"),\n      loanType = _useState12[0],\n      setLoanType = _useState12[1];\n\n  var _useState13 = useState(\"\"),\n      loanNumbers = _useState13[0],\n      setLoanNumbers = _useState13[1];\n\n  var _useState14 = useState(\"\"),\n      bankAccountNumber = _useState14[0],\n      setBankAccountNumber = _useState14[1];\n\n  var _useState15 = useState(\"\"),\n      nearMortgageDate = _useState15[0],\n      setNearMortgageDate = _useState15[1];\n\n  var _useState16 = useState(\"\"),\n      phoneNumber = _useState16[0],\n      setPhoneNumber = _useState16[1];\n\n  function addAccountOwner() {\n    if (!accountVisible1) {\n      setFullName2(\"\");\n      setIDNumber2(\"\");\n      return setAccountVisible1(true);\n    }\n\n    if (!accountVisible2) {\n      setFullName3(\"\");\n      setIDNumber3(\"\");\n      return setAccountVisible2(true);\n    }\n  }\n\n  function setStepOnSubmit(event, stepValue) {\n    event.preventDefault();\n    setStep(stepValue);\n    window.scrollTo(0, 0);\n  }\n\n  function processPdfDocument(_download) {\n    setDownload(_download ? \"1\" : \"0\");\n    setTimeout(function () {\n      formEl.current.submit();\n    }, 100);\n  }\n\n  function handleSubmitRequest(emailAddress) {\n    var response;\n    return _regeneratorRuntime.async(function handleSubmitRequest$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://api.coronaforms.org/api/v1/submit\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              mode: \"no-cors\",\n              body: JSON.stringify({\n                email: emailAddress,\n                data: {\n                  fullName1: fullName1,\n                  fullName2: fullName2,\n                  fullName3: fullName3,\n                  IDNumber1: IDNumber1,\n                  IDNumber2: IDNumber2,\n                  IDNumber3: IDNumber3,\n                  loanType: loanType,\n                  loanNumbers: loanNumbers,\n                  bankAccountNumber: bankAccountNumber,\n                  nearMortgageDate: nearMortgageDate,\n                  phoneNumber: phoneNumber,\n                  signature: signature\n                }\n              })\n            }));\n\n          case 2:\n            response = _context.sent;\n\n            if (response.status === 200) {\n              alert(strings[props.language].Common.ThankYou);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  return __jsx(Fragment, null, __jsx(\"form\", {\n    style: {\n      display: \"none\"\n    },\n    ref: formEl,\n    method: \"POST\",\n    target: \"_blank\",\n    action: \"https://api.coronaforms.org/api/v1/pdf/leumi\"\n  }, __jsx(\"input\", {\n    type: \"text\",\n    name: \"full_name\",\n    value: fullName1\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"full_name_2\",\n    value: fullName2\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"full_name_3\",\n    value: fullName3\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"id\",\n    value: IDNumber1\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"id_2\",\n    value: IDNumber2\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"id_3\",\n    value: IDNumber3\n  }), loanType === \"all_loans\" && __jsx(\"input\", {\n    type: \"text\",\n    name: \"all_loans\",\n    value: \"1\"\n  }), loanType === \"specific_loans\" && __jsx(\"input\", {\n    type: \"text\",\n    name: \"specific_loans\",\n    value: \"1\"\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"loans_numbers\",\n    value: loanNumbers\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"bank_account_number\",\n    value: bankAccountNumber\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"near_mortgage_date\",\n    value: nearMortgageDate\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"phone_number\",\n    value: phoneNumber\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"sig\",\n    value: signature\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"current_date\",\n    value: \"1\"\n  }), __jsx(\"input\", {\n    type: \"text\",\n    name: \"download\",\n    value: download\n  })), step === 0 && __jsx(Fragment, null, __jsx(\"h1\", {\n    className: \"mb-2\"\n  }, strings[props.language].Forms.Accounts.title), __jsx(\"h2\", {\n    className: \"mb-2\"\n  }, strings[props.language].Forms.Accounts.subtitle), __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return setStepOnSubmit(e, 1);\n    }\n  }, __jsx(Input, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    autoFocus: true,\n    required: true,\n    value: fullName1,\n    onChange: function onChange(e) {\n      return setFullName1(e.target.value);\n    },\n    className: \"field not-round\",\n    placeholder: strings[props.language].Common.FullName\n  }), __jsx(Input, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    required: true,\n    type: \"tel\",\n    value: IDNumber1,\n    onChange: function onChange(e) {\n      return setIDNumber1(e.target.value);\n    },\n    className: \"field not-round\",\n    placeholder: strings[props.language].Common.IDNumber\n  }), accountVisible1 && __jsx(\"div\", {\n    className: \"mt-2 name_and_id\"\n  }, __jsx(Input, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    required: true,\n    value: fullName2,\n    onChange: function onChange(e) {\n      return setFullName2(e.target.value);\n    },\n    className: \"field not-round\",\n    placeholder: strings[props.language].Common.FullName\n  }), __jsx(Input, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    required: true,\n    type: \"tel\",\n    value: IDNumber2,\n    onChange: function onChange(e) {\n      return setIDNumber2(e.target.value);\n    },\n    className: \"field not-round\",\n    placeholder: strings[props.language].Common.IDNumber\n  }), __jsx(Button, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    onClick: function onClick() {\n      return setAccountVisible1(false);\n    }\n  }, strings[props.language].Common.Remove)), accountVisible2 && __jsx(\"div\", {\n    className: \"mt-2 mb-2 name_and_id\"\n  }, __jsx(Input, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    required: true,\n    value: fullName3,\n    onChange: function onChange(e) {\n      return setFullName3(e.target.value);\n    },\n    className: \"field not-round\",\n    placeholder: strings[props.language].Common.FullName\n  }), __jsx(Input, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    required: true,\n    type: \"tel\",\n    value: IDNumber3,\n    onChange: function onChange(e) {\n      return setIDNumber3(e.target.value);\n    },\n    className: \"field not-round\",\n    placeholder: strings[props.language].Common.IDNumber\n  }), __jsx(Button, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    onClick: function onClick() {\n      return setAccountVisible2(false);\n    }\n  }, strings[props.language].Common.Remove)), __jsx(\"div\", {\n    className: \"mt-2\"\n  }, (!accountVisible1 || !accountVisible2) && __jsx(Button, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    onClick: addAccountOwner,\n    type: \"button\"\n  }, strings[props.language].Common.AddAccountOwner), __jsx(Button, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    arrow: true\n  }, strings[props.language].Common.Next)))), step === 1 && __jsx(Fragment, null, __jsx(\"h1\", {\n    className: \"mb-2\"\n  }, strings[props.language].Forms.MortgageTypeSelection.title), __jsx(\"h2\", {\n    className: \"mb-2\"\n  }, strings[props.language].Forms.MortgageTypeSelection.subtitle), __jsx(Button, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    arrow: true,\n    onClick: function onClick() {\n      return setLoanType(\"all_loans\"), setStep(3);\n    }\n  }, strings[props.language].Common.AllMyMortgageLoans), __jsx(Button, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    onClick: function onClick() {\n      return setLoanType(\"specific_loans\"), setStep(2);\n    }\n  }, strings[props.language].Common.ChooseMortgageLoans)), step === 2 && __jsx(Fragment, null, __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return setStepOnSubmit(e, 3);\n    }\n  }, __jsx(\"h1\", {\n    className: \"mb-2\"\n  }, strings[props.language].Forms.MortgageLoanNumbers.title), __jsx(\"h2\", {\n    className: \"mb-2\"\n  }, strings[props.language].Forms.MortgageLoanNumbers.subtitle), __jsx(Input, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    autoFocus: true,\n    value: loanNumbers,\n    onChange: function onChange(e) {\n      return setLoanNumbers(e.target.value);\n    },\n    required: true,\n    className: \"field not-round\",\n    label: strings[props.language].Common.LoanNumbers\n  }), __jsx(Button, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    className: \"mt-2\",\n    arrow: true\n  }, strings[props.language].Common.Next))), step === 3 && __jsx(Fragment, null, __jsx(\"form\", {\n    onSubmit: function onSubmit(e) {\n      return setStepOnSubmit(e, 4);\n    }\n  }, __jsx(\"h1\", {\n    className: \"mb-2\"\n  }, strings[props.language].Forms.BankAndContactInforamtion.title), __jsx(\"h2\", {\n    className: \"mb-2\"\n  }, strings[props.language].Forms.BankAndContactInforamtion.subtitle), __jsx(Input, {\n    type: \"tel\",\n    rtl: props.language === \"hebrew\" ? true : false,\n    autoFocus: true,\n    value: bankAccountNumber,\n    onChange: function onChange(e) {\n      return setBankAccountNumber(e.target.value);\n    },\n    required: true,\n    className: \"field not-round\",\n    placeholder: strings[props.language].Common.BankAccountNumber\n  }), __jsx(Input, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    value: nearMortgageDate,\n    onChange: function onChange(e) {\n      return setNearMortgageDate(e.target.value);\n    },\n    label: strings[props.language].Forms.BankAndContactInforamtion.NextMortgagePaymentDate,\n    type: \"date\",\n    required: true,\n    className: \"field not-round\"\n  }), __jsx(Input, {\n    type: \"tel\",\n    rtl: props.language === \"hebrew\" ? true : false,\n    value: phoneNumber,\n    onChange: function onChange(e) {\n      return setPhoneNumber(e.target.value);\n    },\n    required: true,\n    className: \"field not-round\",\n    placeholder: strings[props.language].Common.PhoneNumber\n  }), __jsx(Button, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    className: \"mt-2\",\n    arrow: true,\n    onClick: function onClick() {\n      return setStep(3);\n    }\n  }, strings[props.language].Common.Next))), step === 4 && __jsx(Fragment, null, __jsx(\"h1\", {\n    className: \"mb-2\"\n  }, strings[props.language].Forms.Signature.title), __jsx(\"h2\", {\n    className: \"mb-2\"\n  }, strings[props.language].Forms.Signature.subtitle), __jsx(SignaturePad, {\n    language: props.language,\n    onChange: function onChange(signatureDataURL) {\n      return setSignature(signatureDataURL);\n    }\n  }), __jsx(\"div\", {\n    className: \"mt-2\"\n  }, __jsx(Button, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    onClick: function onClick() {\n      return processPdfDocument(false);\n    },\n    arrow: true\n  }, strings[props.language].Common.PreviewRequest), __jsx(Button, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    onClick: function onClick() {\n      return processPdfDocument(true);\n    },\n    arrow: true\n  }, strings[props.language].Common.Download), __jsx(Button, {\n    rtl: props.language === \"hebrew\" ? true : false,\n    onClick: function onClick() {\n      return setStep(5);\n    },\n    arrow: true\n  }, strings[props.language].Common.StayUpToDate))), step === 5 && __jsx(Fragment, null, __jsx(\"h1\", {\n    className: \"mb-2\"\n  }, strings[props.language].Forms.StayUpToDate.title), __jsx(\"h2\", {\n    className: \"mb-2\"\n  }, strings[props.language].Forms.StayUpToDate.subtitle), __jsx(NewsletterForm, {\n    subtitle: strings[props.language].Common.PrivacyPolicy,\n    onSubmit: handleSubmitRequest,\n    rtl: props.language === \"hebrew\"\n  }), __jsx(Button, {\n    className: \"mt-2\",\n    onClick: function onClick() {\n      return setStep(4);\n    },\n    arrow: true\n  }, strings[props.language].Common.Back)));\n});","map":null,"metadata":{},"sourceType":"module"}