{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { Fragment } from \"react\";\nimport strings from \"../strings.json\";\nimport { useState, useEffect } from \"react\";\nimport NewsletterForm from \"../components/NewsletterForm\";\n\nfunction Hero(props) {\n  var _useState = useState(null),\n      country = _useState[0],\n      setCountry = _useState[1];\n\n  var _useState2 = useState(true),\n      loading = _useState2[0],\n      setLoading = _useState2[1];\n\n  function handleSubmitRequest(emailAddress) {\n    var response;\n    return _regeneratorRuntime.async(function handleSubmitRequest$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(fetch(\"https://api.coronaforms.org/api/v1/submit\", {\n              method: \"POST\",\n              headers: {\n                \"Content-Type\": \"application/json\"\n              },\n              mode: \"cors\",\n              body: JSON.stringify({\n                email: emailAddress,\n                country: country\n              })\n            }));\n\n          case 2:\n            response = _context.sent;\n\n            if (response.status === 200) {\n              alert(strings[props.language].Common.ThankYou);\n            }\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }\n\n  useEffect(function () {\n    function fetchData() {\n      var response, jsonData;\n      return _regeneratorRuntime.async(function fetchData$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return _regeneratorRuntime.awrap(fetch(\"https://api.coronaforms.org/api/v1/geo\"));\n\n            case 2:\n              response = _context2.sent;\n              _context2.next = 5;\n              return _regeneratorRuntime.awrap(response.json());\n\n            case 5:\n              jsonData = _context2.sent;\n              setCountry(jsonData.countryName);\n              setTimeout(function () {\n                setLoading(false);\n              }, 1000);\n\n            case 8:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, null, null, null, Promise);\n    }\n\n    fetchData();\n  }, []);\n  return __jsx(\"div\", {\n    className: \"auto hero\"\n  }, loading && __jsx(\"div\", {\n    className: \"loading\"\n  }, __jsx(\"img\", {\n    width: \"50\",\n    src: \"/puff.svg\"\n  })), !loading && country === \"Israel\" && __jsx(Fragment, null, props.children), !loading && country !== \"Israel\" && __jsx(Fragment, null, __jsx(\"h1\", {\n    className: \"mb-2\"\n  }, strings.english.Hero.title), __jsx(\"h2\", {\n    className: \"mb-2 text-left\"\n  }, strings.english.Hero.NoFormsFound), __jsx(NewsletterForm, {\n    onSubmit: handleSubmitRequest,\n    subtitle: strings.english.Common.PrivacyPolicy\n  })));\n}\n\nexport default Hero;","map":null,"metadata":{},"sourceType":"module"}