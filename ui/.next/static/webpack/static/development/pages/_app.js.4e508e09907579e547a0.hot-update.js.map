{"version":3,"file":"static/webpack/static/development/pages/_app.js.4e508e09907579e547a0.hot-update.js","sources":["webpack:///./pages/_app.js"],"sourcesContent":["import \"./style.css\";\nimport Head from \"next/head\";\nimport Hero from \"../components/Hero\";\nimport strings from \"../strings.json\";\nimport Button from \"../components/Button\";\nimport LeumiForm from \"../components/LeumiForm\";\nimport { useState, Fragment, useEffect } from \"react\";\nimport { Container, Row, Col } from \"react-grid-system\";\n\nexport default () => {\n    const [step, setStep] = useState(\"main\");\n    const [language, setLanguage] = useState(null);\n    const [bank, setBank] = useState(null);\n\n    function changeLangauge(lang) {\n        setLanguage(lang);\n        set(\"lang\", lang);\n    }\n\n    function get(key, defaultValue) {\n        if (localStorage) {\n            return localStorage.getItem(key) || defaultValue;\n        }\n        return defaultValue;\n    }\n\n    function set(key, value) {\n        if (localStorage) {\n            localStorage.setItem(key, value);\n        }\n    }\n\n    useEffect(() => {\n        setLanguage(get(\"lang\", navigator.language.indexOf(\"he\") === 0 ? \"hebrew\" : \"english\"));\n    }, []);\n\n    return language && <div className={language}>\n        <Container>\n            <Head>\n                <title>CoronaForms</title>\n            </Head>\n            <Row className=\"header\">\n                <Col xs={4}><img onTouchEnd={() => setStep(\"main\")} onClick={() => setStep(\"main\")} src=\"/logo.svg\" /></Col>\n                <Col xs={8} className=\"menuItems\">\n                    <a href=\"#mission\">{strings[language].Header.OurMission}</a>\n                    <a href=\"#terms-of-use\">{strings[language].Header.Terms}</a>\n                </Col>\n            </Row>\n            <div className=\"text-center mt-2\">\n                <Hero>\n                    {step === \"main\" && <Fragment>\n                        <h1 className=\"mb-2\">{strings[language].Hero.title}</h1>\n                        <h2 className=\"mb-2\">{strings[language].Hero.subtitle}</h2>\n                        <Button rtl={language == \"hebrew\"} disabled tooltip={strings[language].Common.ComingSoon} arrow>{strings[language].Hero.SmallBusinessAid}</Button>\n                        <Button rtl={language == \"hebrew\"} arrow onClick={() => setStep(\"choose_bank\")}>{strings[language].Hero.MortgageSuspension}</Button>\n                    </Fragment>}\n                    {step === \"choose_bank\" && <Fragment>\n                        <h1 className=\"mb-2\">{strings[language].Forms.ChooseBank.title}</h1>\n                        <h2 className=\"mb-2\">{strings[language].Forms.ChooseBank.subtitle}</h2>\n                        <Button rtl={language == \"hebrew\"} onClick={() => (setBank(\"leumi\"), setStep(\"bank_form\"))} arrow>{strings[language].Common.Leumi}</Button>\n                        <Button rtl={language == \"hebrew\"} disabled onClick={() => (setBank(\"discount\"), setStep(\"bank_form\"))} arrow>{strings[language].Common.Discount}</Button>\n                        <Button rtl={language == \"hebrew\"} disabled onClick={() => (setBank(\"jerusalem\"), setStep(\"bank_form\"))} arrow>{strings[language].Common.Jerusalem}</Button>\n                    </Fragment>}\n                    {step === \"bank_form\" && <Fragment>\n                        {bank === \"leumi\" && <LeumiForm language={language} />}\n                    </Fragment>}\n                </Hero>\n            </div>\n            <div id=\"mission\" className=\"mission\">\n                <h3>{strings[language].OurMission.title}</h3>\n                <p>{strings[language].OurMission.p1}</p>\n                <p>{strings[language].OurMission.p2}</p>\n                <p><strong>CoronaForms</strong> {strings[language].OurMission.p3}</p>\n                <div className=\"text-right mt-3\">\n                    <img src=\"/coronaforms.svg\" />\n                </div>\n            </div>\n        </Container>\n        <div className=\"footer\">\n            <div className=\"floor\"></div>\n            <Container>\n                <Row>\n                    <Col md={6}>\n                        <div className=\"mb-1 pt-1\">\n                            CoronaForms.org {new Date().getFullYear()}\n                        </div>\n                        <div className=\"mb-1\">{strings[language].Footer.MadeWithLoveInIsrael}</div>\n                    </Col>\n                    <Col md={6} className=\"language-links\">\n                        {language === \"hebrew\" && <a href=\"#\" onClick={() => changeLangauge(\"english\")}>Also available in English</a>}\n                        {language === \"english\" && <a href=\"#\" onClick={() => changeLangauge(\"hebrew\")}>זמין גם בעברית</a>}\n                    </Col>\n                </Row>\n            </Container>\n            <div style={{ background: \"#000\", height: 20 }}></div>\n        </div>\n    </div>\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}