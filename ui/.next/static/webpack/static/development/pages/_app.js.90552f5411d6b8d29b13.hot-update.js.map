{"version":3,"file":"static/webpack/static/development/pages/_app.js.90552f5411d6b8d29b13.hot-update.js","sources":["webpack:///./components/Input.js"],"sourcesContent":["import { useState, useRef, Fragment } from \"react\";\n\nexport default props => {\n    const el = useRef(null);\n    const [value, setValue] = useState(\"\");\n    const [focus, setFocus] = useState(false);\n\n    function handleChange(event) {\n        setValue(event.target.value);\n        if (props.onChange) {\n            props.onChange(event);\n        }\n    }\n\n    function handleBlur() {\n        if (value !== \"\") {\n            return;\n        }\n        setFocus(false);\n    }\n\n    function handleLabelClick() {\n        setTimeout(() => {\n            el.current.focus();\n        }, 1);\n    }\n\n    return <Fragment>\n        <style jsx>{`\n        .input-field{\n            position: relative;\n        }\n        .input-field label{\n            display: block;\n            position: absolute;\n            top: 19px;\n            ${props.rtl ? \"right\" : \"left\"}: 20px;\n            font-size: 24px;\n            color: #757575;\n            transition: .15s ease;\n            transition-property: all;\n        }\n        .input-field.focus label{\n            top: 8px;\n            font-size: 16px;\n            font-weight: bold;\n            color: #000;\n        }\n        .input-field input{\n            border: none;\n            outline: none;\n            width: 100%;\n            padding: 20px;\n            font-size: 24px;\n            padding-top: 28px;\n            padding-right: 20px;\n            padding-bottom: 10px;\n            transition: .15s ease;\n            box-sizing: border-box;\n            -webkit-appearance: none;\n            transition-property: all;\n            border-top-left-radius: 10px;\n            border-top-right-radius: 10px;\n            border-bottom: 2px solid #ccc;\n            text-align: ${props.rtl ? \"right\" : \"left\"};\n            direction: ${props.rtl ? \"rtl\" : \"ltr\"};\n        }\n        .input-field.focus input{\n            border-color: #000;\n        }\n        `}</style>\n        <div className={[\"input-field\", focus ? \"focus\" : \"\"].join(\" \")}>\n            <label onClick={handleLabelClick}>{props.label || props.placeholder}</label>\n            <input autoFocus={props.autoFocus} required type={(props.type === \"date\" && focus) ? \"date\" : \"text\"} ref={el} value={value} onChange={handleChange} onFocus={() => setFocus(true)} onBlur={handleBlur} />\n        </div>\n    </Fragment>\n}"],"mappings":";;;;;;;;;;;;;;;;;;;;;AAAA;AAEA;AACA;AACA;AAFA;AAAA;AAAA;AACA;AADA;AAAA;AAAA;AACA;AAIA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA4CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;A","sourceRoot":""}