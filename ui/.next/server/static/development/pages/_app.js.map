{"version":3,"file":"static/development/pages/_app.js","sources":["webpack:///webpack/bootstrap","webpack:///./components/Button.js","webpack:///./components/Hero.js","webpack:///./components/Input.js","webpack:///./components/LeumiForm.js","webpack:///./components/NewsletterForm.js","webpack:///./components/SignaturePad.js","webpack:///./pages/_app.js","webpack:///external \"react\"","webpack:///external \"react-grid-system\"","webpack:///external \"signature_pad\"","webpack:///external \"styled-jsx/style\""],"sourcesContent":[" \t// The module cache\n \tvar installedModules = require('../../../ssr-module-cache.js');\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tvar threw = true;\n \t\ttry {\n \t\t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n \t\t\tthrew = false;\n \t\t} finally {\n \t\t\tif(threw) delete installedModules[moduleId];\n \t\t}\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, { enumerable: true, get: getter });\n \t\t}\n \t};\n\n \t// define __esModule on exports\n \t__webpack_require__.r = function(exports) {\n \t\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n \t\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n \t\t}\n \t\tObject.defineProperty(exports, '__esModule', { value: true });\n \t};\n\n \t// create a fake namespace object\n \t// mode & 1: value is a module id, require it\n \t// mode & 2: merge all properties of value into the ns\n \t// mode & 4: return value when already ns object\n \t// mode & 8|1: behave like require\n \t__webpack_require__.t = function(value, mode) {\n \t\tif(mode & 1) value = __webpack_require__(value);\n \t\tif(mode & 8) return value;\n \t\tif((mode & 4) && typeof value === 'object' && value && value.__esModule) return value;\n \t\tvar ns = Object.create(null);\n \t\t__webpack_require__.r(ns);\n \t\tObject.defineProperty(ns, 'default', { enumerable: true, value: value });\n \t\tif(mode & 2 && typeof value != 'string') for(var key in value) __webpack_require__.d(ns, key, function(key) { return value[key]; }.bind(null, key));\n \t\treturn ns;\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 0);\n","import { Fragment } from \"react\";\n\nfunction Button(props) {\n    return <Fragment>\n        <style jsx>{`\n        button{\n            color: #000;\n            border: none;\n            outline: none;\n            cursor: pointer;\n            font-size: 18px;\n            font-weight: bold;\n            padding: 10px 20px;\n            position: relative;\n            border-radius: 23px;\n            transition: .15s ease;\n            transition-property: all;\n            background-color: #F8D57E;\n            margin-right: 26px;\n            ${props.arrow && props.rtl ? \"padding-left: 30px;\" : \"\"}\n            ${props.arrow && !props.rtl ? \"padding-right: 30px;\" : \"\"}\n        }\n        button:disabled{\n            opacity: 0.8;\n            background: #e2e2e2;\n            cursor: not-allowed;\n        }\n        button:hover{ transform: scale(1.1); }\n        button:active{ transform: scale(0.98); }\n        button .tooltip{\n            left: 28%;\n            color: #fff;\n            padding: 6px;\n            bottom: 40px;\n            display: none;\n            font-size:13px;\n            background: #000;\n            position: absolute;\n            border-radius: 3px;\n        }\n        button:hover .tooltip{ display: block; }\n        button div.arrow-up {\n            width: 0; \n            height: 0; \n            left: 43%;\n            bottom: -10px;\n            position: absolute;\n            border-top: 5px solid black;\n            border-left: 5px solid transparent;\n            border-right: 5px solid transparent;\n        }\n        @media only screen and (max-width: 400px) {\n            button{\n                width: 100%;\n                margin-bottom: 13px;\n                margin-right: none;\n            }\n            button:hover{transform: scale(1);}\n            button .tooltip{\n                left: 36%;\n            }\n        }\n        `}</style>\n        <button type={props.type} onClick={props.onClick} className={props.className} disabled={props.disabled}>\n            {props.children}\n            {props.arrow && !props.rtl && <div className=\"arrow-right\"></div>}\n            {props.arrow && props.rtl && <div className=\"arrow-left\"></div>}\n            {props.tooltip && <div className=\"tooltip\">\n                {props.tooltip}\n                <div style={{ position: \"relative\" }}>\n                    <div className=\"arrow-up\"></div>\n                </div>\n            </div>}\n        </button>\n    </Fragment>\n}\n\nexport default Button;","import { Fragment } from \"react\";\nimport strings from \"../strings.json\";\nimport { useState, useEffect } from \"react\";\nimport NewsletterForm from \"../components/NewsletterForm\";\n\nfunction Hero(props) {\n    const [country, setCountry] = useState(null);\n    const [loading, setLoading] = useState(true);\n\n    useEffect(() => {\n        async function fetchData() {\n            const response = await fetch(\"http://localhost:8080/api/v1/geo\");\n            const jsonData = await response.json();\n            setCountry(jsonData.countryName);\n            setTimeout(() => {\n                setLoading(false);\n            }, 1000);\n        }\n        fetchData();\n    }, []);\n\n    return <div className=\"auto hero\">\n        {loading && <div className=\"loading\"><img width=\"50\" src=\"/puff.svg\" /></div>}\n        {!loading && country === \"Israel\" && <Fragment>\n            {props.children}\n        </Fragment>}\n        {!loading && country !== \"Israel\" && <Fragment>\n            <h1 className=\"mb-2\">{strings.english.Hero.title}</h1>\n            <h2 className=\"mb-2 text-left\">{strings.english.Hero.NoFormsFound}</h2>\n            <NewsletterForm subtitle={strings.english.Common.PrivacyPolicy} />\n        </Fragment>}\n    </div>\n}\n\nexport default Hero;","import { useState, useRef, Fragment } from \"react\";\n\nexport default props => {\n    const el = useRef(null);\n    const [value, setValue] = useState(\"\");\n    const [focus, setFocus] = useState(false);\n\n    function handleChange(event) {\n        setValue(event.target.value);\n        if (props.onChange) {\n            props.onChange(event);\n        }\n    }\n\n    function handleBlur() {\n        if (value !== \"\") {\n            return;\n        }\n        setFocus(false);\n    }\n\n    function handleLabelClick() {\n        setTimeout(() => {\n            el.current.focus();\n        }, 1);\n    }\n\n    return <Fragment>\n        <style jsx>{`\n        .input-field{\n            position: relative;\n        }\n        .input-field label{\n            display: block;\n            position: absolute;\n            top: 19px;\n            ${props.rtl ? \"right\" : \"left\"}: 20px;\n            font-size: 24px;\n            color: #757575;\n            transition: .15s ease;\n            transition-property: all;\n        }\n        .input-field.focus label{\n            top: 8px;\n            font-size: 16px;\n            font-weight: bold;\n            color: #000;\n        }\n        .input-field input{\n            border: none;\n            outline: none;\n            width: 100%;\n            padding: 20px;\n            font-size: 24px;\n            padding-top: 28px;\n            padding-bottom: 10px;\n            padding-right: 20px;\n            transition: .15s ease;\n            box-sizing: border-box;\n            transition-property: all;\n            border-top-left-radius: 10px;\n            border-top-right-radius: 10px;\n            border-bottom: 2px solid #ccc;\n            text-align: ${props.rtl ? \"right\" : \"left\"};\n            direction: ${props.rtl ? \"rtl\" : \"ltr\"};\n        }\n        .input-field.focus input{\n            border-color: #000;\n        }\n        `}</style>\n        <div className={[\"input-field\", focus ? \"focus\" : \"\"].join(\" \")}>\n            <label onClick={handleLabelClick}>{props.label || props.placeholder}</label>\n            <input autoFocus={props.autoFocus} required type={(props.type === \"date\" && focus) ? \"date\" : \"text\"} ref={el} value={value} onChange={handleChange} onFocus={() => setFocus(true)} onBlur={handleBlur} />\n        </div>\n    </Fragment>\n}","import strings from \"../strings.json\";\nimport Button from \"../components/Button\";\nimport { useState, Fragment, useRef } from \"react\";\nimport Input from \"../components/Input\";\nimport SignaturePad from \"../components/SignaturePad\";\n\nexport default (props) => {\n    const formEl = useRef(null);\n    const [step, setStep] = useState(0);\n    const [fullName1, setFullName1] = useState(\"\");\n    const [fullName2, setFullName2] = useState(\"\");\n    const [fullName3, setFullName3] = useState(\"\");\n\n    const [IDNumber1, setIDNumber1] = useState(\"\");\n    const [IDNumber2, setIDNumber2] = useState(\"\");\n    const [IDNumber3, setIDNumber3] = useState(\"\");\n\n    const [accountVisible1, setAccountVisible1] = useState(false);\n    const [accountVisible2, setAccountVisible2] = useState(false);\n\n    const [signature, setSignature] = useState(\"\");\n    const [loanType, setLoanType] = useState(\"\");\n    const [loanNumbers, setLoanNumbers] = useState(\"\");\n\n    const [bankAccountNumber, setBankAccountNumber] = useState(\"\");\n    const [nearMortgageDate, setNearMortgageDate] = useState(\"\");\n    const [phoneNumber, setPhoneNumber] = useState(\"\");\n\n    function addAccountOwner() {\n        if (!accountVisible1) {\n            setFullName2(\"\");\n            setIDNumber2(\"\");\n            return setAccountVisible1(true);\n        }\n        if (!accountVisible2) {\n            setFullName3(\"\");\n            setIDNumber3(\"\");\n            return setAccountVisible2(true);\n        }\n    }\n\n    function previewPdfDocument() {\n        formEl.current.submit();\n    }\n\n    return <Fragment>\n        <form style={{ display: \"none\" }} ref={formEl} method=\"POST\" target=\"_blank\" action=\"http://localhost:8080/api/v1/pdf/leumi\">\n            <input type=\"text\" name=\"full_name\" value={fullName1} />\n            <input type=\"text\" name=\"full_name_2\" value={fullName2} />\n            <input type=\"text\" name=\"full_name_3\" value={fullName3} />\n            <input type=\"text\" name=\"id\" value={IDNumber1} />\n            <input type=\"text\" name=\"id_2\" value={IDNumber2} />\n            <input type=\"text\" name=\"id_3\" value={IDNumber3} />\n            {loanType === \"all_loans\" && <input type=\"text\" name=\"all_loans\" value=\"1\" />}\n            {loanType === \"specific_loans\" && <input type=\"text\" name=\"specific_loans\" value=\"1\" />}\n            <input type=\"text\" name=\"loans_numbers\" value={loanNumbers} />\n            <input type=\"text\" name=\"bank_account_number\" value={bankAccountNumber} />\n            <input type=\"text\" name=\"near_mortgage_date\" value={nearMortgageDate} />\n            <input type=\"text\" name=\"phone_number\" value={phoneNumber} />\n            <input type=\"text\" name=\"sig\" value={signature} />\n            <input type=\"text\" name=\"current_date\" value=\"1\" />\n        </form>\n        {step === 0 && <Fragment>\n            <h1 className=\"mb-2\">{strings[props.language].Forms.Accounts.title}</h1>\n            <h2 className=\"mb-2\">{strings[props.language].Forms.Accounts.subtitle}</h2>\n            <form onSubmit={() => setStep(1)}>\n                <Input rtl={props.language === \"hebrew\" ? true : false} autoFocus required value={fullName1} onChange={e => setFullName1(e.target.value)} className=\"field not-round\" placeholder={strings[props.language].Common.FullName} />\n                <Input rtl={props.language === \"hebrew\" ? true : false} required value={IDNumber1} onChange={e => setIDNumber1(e.target.value)} className=\"field not-round\" placeholder={strings[props.language].Common.IDNumber} />\n                {accountVisible1 && <div className=\"mt-2 name_and_id\">\n                    <Input rtl={props.language === \"hebrew\" ? true : false} required value={fullName2} onChange={e => setFullName2(e.target.value)} className=\"field not-round\" placeholder={strings[props.language].Common.FullName} />\n                    <Input rtl={props.language === \"hebrew\" ? true : false} required value={IDNumber2} onChange={e => setIDNumber2(e.target.value)} className=\"field not-round\" placeholder={strings[props.language].Common.IDNumber} />\n                    <Button rtl={props.language === \"hebrew\" ? true : false} onClick={() => setAccountVisible1(false)}>{strings[props.language].Common.Remove}</Button>\n                </div>}\n                {accountVisible2 && <div className=\"mt-2 mb-2 name_and_id\">\n                    <Input rtl={props.language === \"hebrew\" ? true : false} required value={fullName3} onChange={e => setFullName3(e.target.value)} className=\"field not-round\" placeholder={strings[props.language].Common.FullName} />\n                    <Input rtl={props.language === \"hebrew\" ? true : false} required value={IDNumber3} onChange={e => setIDNumber3(e.target.value)} className=\"field not-round\" placeholder={strings[props.language].Common.IDNumber} />\n                    <Button rtl={props.language === \"hebrew\" ? true : false} onClick={() => setAccountVisible2(false)}>{strings[props.language].Common.Remove}</Button>\n                </div>}\n                <div className=\"mt-2\">\n                    {(!accountVisible1 || !accountVisible2) && <Button rtl={props.language === \"hebrew\" ? true : false} onClick={addAccountOwner} type=\"button\">{strings[props.language].Common.AddAccountOwner}</Button>}\n                    <Button rtl={props.language === \"hebrew\" ? true : false} arrow>{strings[props.language].Common.Next}</Button>\n                </div>\n            </form>\n        </Fragment>}\n        {step === 1 && <Fragment>\n            <h1 className=\"mb-2\">{strings[props.language].Forms.MortgageTypeSelection.title}</h1>\n            <h2 className=\"mb-2\">{strings[props.language].Forms.MortgageTypeSelection.subtitle}</h2>\n            <Button rtl={props.language === \"hebrew\" ? true : false} arrow onClick={() => (setLoanType(\"all_loans\"), setStep(3))}>{strings[props.language].Common.AllMyMortgageLoans}</Button>\n            <Button rtl={props.language === \"hebrew\" ? true : false} onClick={() => (setLoanType(\"specific_loans\"), setStep(2))}>{strings[props.language].Common.ChooseMortgageLoans}</Button>\n        </Fragment>}\n        {step === 2 && <Fragment>\n            <form onSubmit={() => setStep(3)}>\n                <h1 className=\"mb-2\">{strings[props.language].Forms.MortgageLoanNumbers.title}</h1>\n                <h2 className=\"mb-2\">{strings[props.language].Forms.MortgageLoanNumbers.subtitle}</h2>\n                <Input rtl={props.language === \"hebrew\" ? true : false} autoFocus value={loanNumbers} onChange={e => setLoanNumbers(e.target.value)} required className=\"field not-round\" label={strings[props.language].Common.LoanNumbers} />\n                <Button rtl={props.language === \"hebrew\" ? true : false} className=\"mt-2\" arrow>{strings[props.language].Common.Next}</Button>\n            </form>\n        </Fragment>}\n        {step === 3 && <Fragment>\n            <form onSubmit={() => setStep(4)}>\n                <h1 className=\"mb-2\">{strings[props.language].Forms.BankAndContactInforamtion.title}</h1>\n                <h2 className=\"mb-2\">{strings[props.language].Forms.BankAndContactInforamtion.subtitle}</h2>\n                <Input rtl={props.language === \"hebrew\" ? true : false} autoFocus value={bankAccountNumber} onChange={e => setBankAccountNumber(e.target.value)} required className=\"field not-round\" placeholder={strings[props.language].Common.BankAccountNumber} />\n                <Input rtl={props.language === \"hebrew\" ? true : false} value={nearMortgageDate} onChange={e => setNearMortgageDate(e.target.value)} label={strings[props.language].Forms.BankAndContactInforamtion.NextMortgagePaymentDate} type=\"date\" required className=\"field not-round\" />\n                <Input rtl={props.language === \"hebrew\" ? true : false} value={phoneNumber} onChange={e => setPhoneNumber(e.target.value)} required className=\"field not-round\" placeholder={strings[props.language].Common.PhoneNumber} />\n                <Button rtl={props.language === \"hebrew\" ? true : false} className=\"mt-2\" arrow onClick={() => setStep(3)}>{strings[props.language].Common.Next}</Button>\n            </form>\n        </Fragment>}\n        {step === 4 && <Fragment>\n            <h1 className=\"mb-2\">{strings[props.language].Forms.Signature.title}</h1>\n            <h2 className=\"mb-2\">{strings[props.language].Forms.Signature.subtitle}</h2>\n            <SignaturePad onChange={signatureDataURL => setSignature(signatureDataURL)} />\n            <Button rtl={props.language === \"hebrew\" ? true : false} onClick={previewPdfDocument} className=\"mt-2\" arrow>{strings[props.language].Common.PreviewRequest}</Button>\n        </Fragment>}\n    </Fragment>\n}","import Button from \"./Button\";\nimport strings from \"../strings.json\";\nimport { useRef, Fragment } from \"react\";\n\nfunction NewsletterForm(props) {\n    const el = useRef(null);\n\n    function handleSubmit(event) {\n        event.preventDefault();\n        if (typeof props.onSubmit === \"function\") {\n            props.onSubmit(el.current.value);\n        }\n    }\n\n    return <Fragment>\n        <style jsx>{`p.small{font-size:15px;margin:0;margin-top:7.5px;text-align:left;color:#111;}`}</style>\n        <form onSubmit={handleSubmit} className=\"newsletter\">\n            <input className=\"field\" ref={el} placeholder={strings.english.Common.EmailAddressPlaceholder} />\n            <Button arrow>{strings.english.Common.SignUp}</Button>\n            {props.subtitle && <p className=\"small\">{props.subtitle}</p>}\n            {props.children}\n        </form>\n    </Fragment>\n}\n\nexport default NewsletterForm;","import { useRef, useEffect, useState, Fragment } from \"react\";\nimport SignaturePad from \"signature_pad\";\n\nexport default (props) => {\n    const el = useRef(null);\n    const [pad, setPad] = useState(null);\n\n    useEffect(() => {\n        let _ = new SignaturePad(el.current, {\n            onEnd: () => {\n                props.onChange(_.toDataURL(\"image/png\"))\n            }\n        });\n        setPad(_);\n    }, []);\n\n    return <Fragment>\n        <style jsx>{`\n            .signature_wrapper{\n                width: 275px;\n                margin: auto;\n                background: #eee;\n                position: relative;\n                border: 2px solid #ccc;\n            }\n            .signature_wrapper button{\n                position: absolute;\n                left: 5px;\n                bottom: 5px;\n                padding: 5px 10px;\n                border: none;\n                outline: none;\n                background: #F8D57E;\n                color: #000;\n                cursor: pointer;\n                border-radius: 3px;\n                font-size: 14px;\n                font-weight: bold;\n                opacity: 0.7;\n            }\n            .signature_wrapper button:hover {opacity: 1;}\n        `}</style>\n        <div className=\"signature_wrapper\">\n            <canvas width=\"275\" height=\"100\" ref={el}></canvas>\n            <button onClick={() => pad.clear()} type=\"button\">RESET</button>\n        </div>\n    </Fragment>;\n}","import \"./style.css\";\nimport Hero from \"../components/Hero\";\nimport strings from \"../strings.json\";\nimport Button from \"../components/Button\";\nimport { useState, Fragment } from \"react\";\nimport LeumiForm from \"../components/LeumiForm\";\nimport { Container, Row, Col } from \"react-grid-system\";\n\nexport default () => {\n    const [data, setData] = useState({});\n    const [step, setStep] = useState(\"main\");\n    const [language, setLanguage] = useState(\"hebrew\");\n\n    function handleUpdate(key, value, next = null) {\n        let newData = { ...data };\n        newData[key] = value;\n        setData(newData);\n        if (next) {\n            setStep(next);\n        }\n    }\n\n    return <div className={language}>\n        <Container>\n            <Row className=\"header\">\n                <Col xs={4}><img onClick={() => setStep(\"main\")} src=\"/logo.svg\" /></Col>\n                <Col xs={8} className=\"menuItems\">\n                    <a href=\"#mission\">{strings[language].Header.OurMission}</a>\n                    <a href=\"#terms-of-use\">{strings[language].Header.Terms}</a>\n                </Col>\n            </Row>\n            <div className=\"text-center mt-2\">\n                <Hero>\n                    {step === \"main\" && <Fragment>\n                        <h1 className=\"mb-2\">{strings[language].Hero.title}</h1>\n                        <h2 className=\"mb-2\">{strings[language].Hero.subtitle}</h2>\n                        <Button rtl={language == \"hebrew\"} disabled tooltip={strings[language].Common.ComingSoon} arrow>{strings[language].Hero.SmallBusinessAid}</Button>\n                        <Button rtl={language == \"hebrew\"} arrow onClick={() => setStep(\"choose_bank\")}>{strings[language].Hero.MortgageSuspension}</Button>\n                    </Fragment>}\n                    {step === \"choose_bank\" && <Fragment>\n                        <h1 className=\"mb-2\">{strings[language].Forms.ChooseBank.title}</h1>\n                        <h2 className=\"mb-2\">{strings[language].Forms.ChooseBank.subtitle}</h2>\n                        <Button rtl={language == \"hebrew\"} onClick={() => handleUpdate(\"bank\", \"leumi\", \"bank_form\")} arrow>{strings[language].Common.Leumi}</Button>\n                        <Button rtl={language == \"hebrew\"} disabled onClick={() => handleUpdate(\"bank\", \"discount\", \"bank_form\")} arrow>{strings[language].Common.Discount}</Button>\n                        <Button rtl={language == \"hebrew\"} disabled onClick={() => handleUpdate(\"bank\", \"jerusalem\", \"bank_form\")} arrow>{strings[language].Common.Jerusalem}</Button>\n                    </Fragment>}\n                    {step === \"bank_form\" && <Fragment>\n                        {data.bank === \"leumi\" && <LeumiForm language={language} data={data} handleUpdate={handleUpdate} />}\n                    </Fragment>}\n                </Hero>\n            </div>\n            <div id=\"mission\" className=\"mission\">\n                <h3>{strings[language].OurMission.title}</h3>\n                <p>{strings[language].OurMission.p1}</p>\n                <p>{strings[language].OurMission.p2}</p>\n                <p><strong>CoronaForms</strong> {strings[language].OurMission.p3}</p>\n                <div className=\"text-right mt-3\">\n                    <img src=\"/coronaforms.svg\" />\n                </div>\n            </div>\n        </Container>\n        <div className=\"footer\">\n            <div className=\"floor\"></div>\n            <Container>\n                <div className=\"mb-1 pt-1\">\n                    CoronaForms.org {new Date().getFullYear()}\n                </div>\n                <div className=\"mb-1\">{strings[language].Footer.MadeWithLoveInIsrael}</div>\n            </Container>\n            <div style={{ background: \"#000\", height: 20 }}></div>\n        </div>\n    </div>\n}","module.exports = require(\"react\");","module.exports = require(\"react-grid-system\");","module.exports = require(\"signature_pad\");","module.exports = require(\"styled-jsx/style\");"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;ACxFA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AA4DA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AC7EA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;AClCA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA;AA2CA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;AC3EA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;ACnHA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AACA;AACA;;;;;;;;;;;;;;;;;;;;;;;ACzBA;AACA;AAEA;AACA;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AAHA;AACA;AAIA;AACA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AA0BA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AC/CA;AACA;AACA;AACA;AACA;AACA;AACA;AAEA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAIA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACxEA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;;;;;;;;ACAA;;;;A","sourceRoot":""}