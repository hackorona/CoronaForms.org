{"ast":null,"code":"var _this = this,\n    _jsxFileName = \"/Users/ronmasas/Desktop/coronaforms.org/frontend/components/signature-pad.js\";\n\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport { useRef, useEffect, useState } from \"react\";\nimport SignaturePad from \"signature_pad\";\nexport default (function () {\n  var el = useRef(null);\n\n  var _useState = useState(null),\n      pad = _useState[0],\n      setPad = _useState[1];\n\n  useEffect(function () {\n    setPad(new SignaturePad(el.current));\n  }, []);\n  return __jsx(\"div\", {\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }\n  }, __jsx(\"canvas\", {\n    ref: el,\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 9\n    }\n  }), __jsx(\"button\", {\n    onClick: function onClick() {\n      return pad.clear();\n    },\n    __self: _this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 14,\n      columnNumber: 9\n    }\n  }, \"clear\"));\n});","map":{"version":3,"sources":["/Users/ronmasas/Desktop/coronaforms.org/frontend/components/signature-pad.js"],"names":["useRef","useEffect","useState","SignaturePad","el","pad","setPad","current","clear"],"mappings":";;;;;AAAA,SAASA,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,QAA4C,OAA5C;AACA,OAAOC,YAAP,MAAyB,eAAzB;AAEA,gBAAe,YAAM;AACjB,MAAMC,EAAE,GAAGJ,MAAM,CAAC,IAAD,CAAjB;;AADiB,kBAEKE,QAAQ,CAAC,IAAD,CAFb;AAAA,MAEVG,GAFU;AAAA,MAELC,MAFK;;AAIjBL,EAAAA,SAAS,CAAC,YAAM;AACZK,IAAAA,MAAM,CAAC,IAAIH,YAAJ,CAAiBC,EAAE,CAACG,OAApB,CAAD,CAAN;AACH,GAFQ,EAEN,EAFM,CAAT;AAIA,SAAO;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACH;AAAQ,IAAA,GAAG,EAAEH,EAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADG,EAEH;AAAQ,IAAA,OAAO,EAAE;AAAA,aAAMC,GAAG,CAACG,KAAJ,EAAN;AAAA,KAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aAFG,CAAP;AAIH,CAZD","sourcesContent":["import { useRef, useEffect, useState } from \"react\";\nimport SignaturePad from \"signature_pad\";\n\nexport default () => {\n    const el = useRef(null);\n    const [pad, setPad] = useState(null);\n\n    useEffect(() => {\n        setPad(new SignaturePad(el.current));\n    }, []);\n\n    return <div>\n        <canvas ref={el}></canvas>\n        <button onClick={() => pad.clear()}>clear</button>\n    </div>;\n}"]},"metadata":{},"sourceType":"module"}