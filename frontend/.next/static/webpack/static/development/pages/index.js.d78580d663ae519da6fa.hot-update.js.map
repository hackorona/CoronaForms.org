{"version":3,"file":"static/webpack/static/development/pages/index.js.d78580d663ae519da6fa.hot-update.js","sources":["webpack:///./pages/index.js"],"sourcesContent":["import { useState, useRef } from \"react\";\nimport Form from \"../components/form\";\nimport Styles from \"../components/styles\";\nimport lang from \"../components/language\";\nimport SignaturePad from \"../components/signature-pad\";\nimport { Container, Row, Col } from 'react-grid-system';\n\n\nexport default () => {\n    const el = useRef(null);\n    const [currLang, setCurrLang] = useState(\"hebrew\");\n    const [currCountry, setCurrCountry] = useState(\"Israel\");\n    const [formState, setFormState] = useState(0);\n    const [form, setForm] = useState({ current_date: 1 });\n\n    function updateForm(key, value) {\n        let newForm = JSON.parse(JSON.stringify(form));\n        newForm[key] = value;\n        setForm(newForm);\n    }\n\n    function handleNext(to, key, value) {\n        if (typeof value !== \"string\") {\n            value = value.value;\n        }\n        return () => {\n            setFormState(to);\n            updateForm(key, value);\n        };\n    }\n\n    async function generatePDF() {\n\n    }\n\n    return <div className={currLang}>\n        <Styles />\n        <div style={{ height: 70 }}>\n            <Container className=\"mb-4\">\n                <Row>\n                    <Col xs={4} style={{ lineHeight: \"70px\" }}><img src=\"/logo.svg\" /></Col>\n                    <Col className=\"menu_items\" xs={8} style={{ textAlign: currLang === \"hebrew\" ? \"left\" : \"right\", lineHeight: \"70px\" }}>\n                        <a href=\"#\">{lang[currLang].header.OurMission}</a>\n                        <a href=\"#\">{lang[currLang].header.Terms}</a>\n                    </Col>\n                </Row>\n            </Container>\n            <Container className=\"mb-4\">\n                {formState === 0 && <div style={{ textAlign: \"center\" }}>\n                    <Form title={lang[currLang].title}\n                        subtitle={<div>{lang[currLang].subtitle}: <strong>{lang[currLang].countries[currCountry]}</strong></div>}\n                        buttons={<div className=\"mt-2\">\n                            <button disabled>\n                                {lang[currLang].forms.SmallBusinessAid}\n                                <div className=\"tooltip\">\n                                    <div className=\"relative\">{lang[currLang].common.ComingSoon}<div className=\"arrow-up\"></div></div>\n                                </div>\n                            </button>\n                            <button onClick={() => setFormState(1)} className=\"with_icon\">\n                                {lang[currLang].forms.MortgageRelief}\n                                <img src=\"/arrow-right.svg\" width=\"10\" />\n                            </button>\n                        </div>} />\n                </div>}\n                {formState > 0 && <Row>\n                    <Col xs={3}>\n                        <ul>\n                            {lang[currLang].questions.map((q, index) => {\n                                return <li key={index} onClick={() => formState > index + 1 ? handleNext(index + 1)() : null} className={formState <= index ? \"\" : \"active\"}>{q.id}</li>\n                            })}\n                        </ul>\n                    </Col>\n                    <Col xs={9}>\n                        <div className=\"center mb-4\">\n                            {formState === 1 && <div>\n                                <Form title={lang[currLang].questions[0].title}\n                                    subtitle={lang[currLang].questions[0].subtitle}\n                                    buttons={<div>\n                                        <button onClick={handleNext(2, \"bank\", \"leumi\")} className=\"with_icon\">\n                                            {lang[currLang].common.Leumi}\n                                            <img src=\"/arrow-right.svg\" width=\"10\" />\n                                        </button>\n                                        <button onClick={handleNext(2, \"bank\", \"discount\")} className=\"with_icon\">\n                                            {lang[currLang].common.Discount}\n                                            <img src=\"/arrow-right.svg\" width=\"10\" />\n                                        </button>\n                                        <button onClick={handleNext(2, \"bank\", \"jerusalem\")} className=\"with_icon\">\n                                            {lang[currLang].common.Jerusalem}\n                                            <img src=\"/arrow-right.svg\" width=\"10\" />\n                                        </button>\n                                    </div>} />\n                            </div>}\n                            {formState === 2 && <div>\n                                <Form title={lang[currLang].questions[1].title}\n                                    subtitle={lang[currLang].questions[1].subtitle}\n                                    buttons={<div>\n                                        <div style={{ maxWidth: 700, margin: \"auto\" }}>\n                                            <form onSubmit={e => (e.preventDefault(), handleNext(3, \"full_name\", el.current)())}>\n                                                <input required ref={el} autoFocus={true} className=\"mb-2\" placeholder={lang[currLang].placeholders.FullName} />\n                                                <button className=\"with_icon\">\n                                                    {lang[currLang].common.Next}\n                                                    <img src=\"/arrow-right.svg\" width=\"10\" />\n                                                </button>\n                                            </form>\n                                        </div>\n                                    </div>} />\n                            </div>}\n                            {formState === 3 && <div>\n                                <Form title={lang[currLang].questions[2].title}\n                                    subtitle={lang[currLang].questions[2].subtitle}\n                                    buttons={<div>\n                                        <div style={{ maxWidth: 700, margin: \"auto\" }}>\n                                            <form onSubmit={e => (e.preventDefault(), handleNext(4, \"id\", el.current)())}>\n                                                <input required ref={el} autoFocus={true} className=\"mb-2\" placeholder={lang[currLang].placeholders.IDNumber} />\n                                                <button className=\"with_icon\">\n                                                    {lang[currLang].common.Next}\n                                                    <img src=\"/arrow-right.svg\" width=\"10\" />\n                                                </button>\n                                            </form>\n                                        </div>\n                                    </div>} />\n                            </div>}\n                            {formState === 4 && <div>\n                                <Form title={lang[currLang].questions[3].title}\n                                    subtitle={lang[currLang].questions[3].subtitle}\n                                    buttons={<div>\n                                        <div style={{ maxWidth: 700, margin: \"auto\" }}>\n                                            <button onClick={handleNext(6, \"all_loans\", 1)} className=\"with_icon\">\n                                                {lang[currLang].common.Yes}\n                                                <img src=\"/arrow-right.svg\" width=\"10\" />\n                                            </button>\n                                            <button onClick={handleNext(5, \"all_loans\", 0)} className=\"with_icon\">\n                                                {lang[currLang].common.No}\n                                                <img src=\"/arrow-right.svg\" width=\"10\" />\n                                            </button>\n                                        </div>\n                                    </div>} />\n                            </div>}\n                            {formState === 5 && <div>\n                                <Form title={lang[currLang].questions[4].title}\n                                    subtitle={lang[currLang].questions[4].subtitle}\n                                    buttons={<div>\n                                        <div style={{ maxWidth: 700, margin: \"auto\" }}>\n                                            <form onSubmit={e => (e.preventDefault(), handleNext(6, \"specific_loans\", el.current)())}>\n                                                <input required ref={el} autoFocus={true} className=\"mb-2\" placeholder=\"1234, 5678\" />\n                                                <button className=\"with_icon\">\n                                                    {lang[currLang].common.Next}\n                                                    <img src=\"/arrow-right.svg\" width=\"10\" />\n                                                </button>\n                                            </form>\n                                        </div>\n                                    </div>} />\n                            </div>}\n                            {formState === 6 && <div>\n                                <Form title={lang[currLang].questions[5].title}\n                                    subtitle={lang[currLang].questions[5].subtitle}\n                                    buttons={<div>\n                                        <div style={{ maxWidth: 700, margin: \"auto\" }}>\n                                            <form onSubmit={e => (e.preventDefault(), handleNext(7, \"bank_account_number\", el.current)())}>\n                                                <input required ref={el} autoFocus={true} className=\"mb-2\" placeholder=\"000000\" />\n                                                <button className=\"with_icon\">\n                                                    {lang[currLang].common.Next}\n                                                    <img src=\"/arrow-right.svg\" width=\"10\" />\n                                                </button>\n                                            </form>\n                                        </div>\n                                    </div>} />\n                            </div>}\n                            {formState === 7 && <div>\n                                <Form title={lang[currLang].questions[6].title}\n                                    subtitle={lang[currLang].questions[6].subtitle}\n                                    buttons={<div>\n                                        <div style={{ maxWidth: 700, margin: \"auto\" }}>\n                                            <form onSubmit={e => (e.preventDefault(), handleNext(8, \"near_mortgage_date\", el.current)())}>\n                                                <input type=\"date\" ref={el} required autoFocus={true} className=\"mb-2\" />\n                                                <button className=\"with_icon\">\n                                                    {lang[currLang].common.Next}\n                                                    <img src=\"/arrow-right.svg\" width=\"10\" />\n                                                </button>\n                                            </form>\n                                        </div>\n                                    </div>} />\n                            </div>}\n                            {formState === 8 && <div>\n                                <Form title={lang[currLang].questions[7].title}\n                                    subtitle={lang[currLang].questions[7].subtitle}\n                                    buttons={<div>\n                                        <div style={{ maxWidth: 700, margin: \"auto\" }}>\n                                            <form onSubmit={e => (e.preventDefault(), handleNext(9, \"phone_number\", el.current)())}>\n                                                <input type=\"tel\" ref={el} required autoFocus={true} className=\"mb-2\" placeholder=\"050-1234567\" />\n                                                <button className=\"with_icon\">\n                                                    {lang[currLang].common.Next}\n                                                    <img src=\"/arrow-right.svg\" width=\"10\" />\n                                                </button>\n                                            </form>\n                                        </div>\n                                    </div>} />\n                            </div>}\n                            {formState === 9 && <div>\n                                <Form title={lang[currLang].questions[8].title}\n                                    subtitle={lang[currLang].questions[8].subtitle}\n                                    buttons={<div>\n                                        <div style={{ maxWidth: 700, margin: \"auto\" }}>\n                                            <SignaturePad onChange={sig => console.log(\"SIG->\", sig), updateForm(\"sig\", sig)}\n                                                resetButtonText={\"RESET\"}\n                                                nextButton={<button onClick={generatePDF} className=\"with_icon\">\n                                                    {lang[currLang].common.ImDone}\n                                                    <img src=\"/arrow-right.svg\" width=\"10\" />\n                                                </button>} />\n                                        </div>\n                                    </div>} />\n                                <form method=\"POST\" action={\"http://localhost:8080/api/v1/pdf/\" + form.bank} target=\"iframe\">\n                                    {Object.keys(form).map((key, index) => {\n                                        return <input key={index} type=\"text\" name={key} defaultValue={form[key]} />\n                                    })}\n                                    <button>submit</button>\n                                </form>\n                                <iframe style={{ width: \"100%\", height: 700 }} name=\"iframe\"></iframe>\n                            </div>}\n                        </div>\n                    </Col>\n                </Row>}\n            </Container>\n            <Container className=\"mt-4 mission\">\n                <h1>{lang[currLang].mission_section.title}</h1>\n                <p>{lang[currLang].mission_section.p1}</p>\n                <p>{lang[currLang].mission_section.p2}</p>\n                <p><strong>CoronaForms</strong> {lang[currLang].mission_section.p3}</p>\n                <div className=\"mt-4\">\n                    <img className=\"responsive\" style={{ minWidth: 270, maxWidth: 770 }} src=\"/cleaning.svg\" />\n                </div>\n            </Container>\n            <Container className=\"footer mb-4\">\n                CoronaForms.org {new Date().getFullYear()} - {lang[currLang].footer.MadeWithLoveInIsrael}\n                <div className=\"mt-2\">\n                    {currLang === \"hebrew\" && <div>\n                        <a onClick={() => setCurrLang(\"english\")} href=\"#\">Also available in English</a>\n                    </div>}\n                    {currLang === \"english\" && <div>\n                        <a onClick={() => setCurrLang(\"hebrew\")} href=\"#\">זמין גם בעברית</a>\n                    </div>}\n                </div>\n            </Container>\n        </div>\n    </div>\n}"],"mappings":"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AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AARA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAcsourceRoot":""}